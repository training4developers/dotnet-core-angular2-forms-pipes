{"version":3,"sources":["webpack:///./wwwrootsrc/js/main.ts","webpack:///./wwwrootsrc/js/app/app.module.ts","webpack:///./wwwrootsrc/js/app/app.router.ts","webpack:///./wwwrootsrc/js/app/components/widget-table/widget-table.component.ts","webpack:///./wwwrootsrc/js/app/services/widgets.ts","webpack:///./wwwrootsrc/js/app/components/widget-table/widget-table.component.html","webpack:///./wwwrootsrc/js/app/components/widget-table/widget-table.component.scss","webpack:///./wwwrootsrc/js/app/components/widget-view/widget-view.component.ts","webpack:///./wwwrootsrc/js/app/components/widget-view/widget-view.component.html","webpack:///./wwwrootsrc/js/app/components/widget-view/widget-view.component.scss","webpack:///./wwwrootsrc/js/app/components/widget-edit/widget-edit.component.ts","webpack:///./wwwrootsrc/js/app/components/widget-edit/widget-edit.component.html","webpack:///./wwwrootsrc/js/app/components/widget-edit/widget-edit.component.scss","webpack:///./wwwrootsrc/js/app/app.component.ts","webpack:///./wwwrootsrc/js/app/app.component.scss","webpack:///./wwwrootsrc/js/app/app.component.html","webpack:///./wwwrootsrc/css/styles.scss?be69","webpack:///./wwwrootsrc/css/styles.scss","webpack:///./wwwrootsrc/js/app/pipes/capitalize.pipe.ts"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["// Used to bootstrap the application in a web browser environment\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\n// The function enableProdMode switches the application to prod mode when invoked\nimport { enableProdMode } from '@angular/core';\n\n// in proc mode special development and debugging\n// capabilities are turned off to improve performance\nif (String(process.env['ENV']).toLowerCase() === 'production') {\n   enableProdMode();\n}\n\n// import the AppModule\nimport { AppModule } from './app/app.module';\n\n// bootstrap the application from the AppModule\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n// WEBPACK FOOTER //\n// ./wwwrootsrc/js/main.ts","// The NgModule decorator is use to decorate classes to identify\n// them as module classes in the Angular 2 application\nimport { NgModule } from '@angular/core';\n\n// Imports the Browser Module to run the Angular 2 application in\n// a web browser environment. At the moment, Angular 2 applications\n// typically run in a web browser environment, but this is expected\n// to expand to native apps, such as iOS apps, in the near future\n// meaning Angular 2 will not be limited to a web browser environment,\n// and other platform modules will be available.\nimport { BrowserModule } from '@angular/platform-browser';\n\n// Imports the Forms module to provide access to NgModel to\n// perform two-way data binding between form controls and\n// the component data\nimport { FormsModule } from '@angular/forms';\n\n// Imports the Http module to provide access to AJAX request\n// to REST services\nimport { HttpModule } from '@angular/http';\n\n// Imports the routing configuration for the application\nimport { AppRouterModule } from './app.router'; \n\n// Imports the components to be registered with the application\n// so they can be referenced in templates and by the router\nimport { AppComponent } from './app.component';\nimport { WidgetTable } from \"./components/widget-table/widget-table.component\";\nimport { WidgetView } from \"./components/widget-view/widget-view.component\";\nimport { WidgetEdit } from \"./components/widget-edit/widget-edit.component\";\n\n// Imports the pipes to be registered with the application\n// so they can be reference in the templates\nimport { CapitalizePipe } from \"./pipes/capitalize.pipe\";\n\n// Imports the Widgets Service so it can be registered with the Application Module\nimport { Widgets } from \"./services/widgets\";\n\n// Imports the global styles for the application\n// Angular 2 apps have two kinds of styles, global and component-specific\n// styles. Global styles are referenced in the App Module, while\n// component specific styles are referenced via the styles option on\n// each component's decorator configuration   \nimport '../../css/styles.scss';\n\n// Decorates the class to be an Angular 2 module\n// Each Angular 2 application has a top-level AppModule\n// from which the application bootstraps itself\n@NgModule({\n    // import modules needed for the application\n    imports: [ BrowserModule, FormsModule, HttpModule, AppRouterModule ],\n\n    // Make the App, Widget Table, and Widget View components available\n    // for use in the templates\n    declarations: [ AppComponent, WidgetTable, WidgetView, WidgetEdit, CapitalizePipe ],\n\n    // Start the application from the App component\n    bootstrap: [ AppComponent ],\n\n    // makes the service available to the component\n    providers: [ Widgets ],    \n})\nexport class AppModule { }\n\n\n// WEBPACK FOOTER //\n// ./wwwrootsrc/js/app/app.module.ts","import { Route, RouterModule } from '@angular/router';\n\nimport { WidgetTable } from './components/widget-table/widget-table.component';\nimport { WidgetView } from './components/widget-view/widget-view.component';\nimport { WidgetEdit } from './components/widget-edit/widget-edit.component';\n\n// path is the url\n// component is the component to load for the specified path\n// :widgetId is the parameter\nconst appRoutes: Route[] = [\n    { path: 'widget/create', component: WidgetEdit },\n    { path: 'widget/:widgetId', component: WidgetView },\n    { path: 'widget/:widgetId/edit', component: WidgetEdit },\n\t{ path: '', component: WidgetTable },\n];\n\n// construct a customized router module with the custom routes\n// use the HTML5 History API instead of hashes for routing\nexport const AppRouterModule = RouterModule.forRoot(appRoutes, { useHash: false });\n\n\n// WEBPACK FOOTER //\n// ./wwwrootsrc/js/app/app.router.ts","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { Widgets } from \"../../services/widgets\";\nimport { Widget } from \"../../models/widget\";\n\n@Component({\n    selector: \"widget-table\",\n    template: require(\"./widget-table.component.html\"),\n    styles: [ require(\"./widget-table.component.scss\") ]\n})\nexport class WidgetTable implements OnInit {\n\n    // private fields to hold widgets\n    private widgets: Widget[] = [];\n\n    constructor(\n        private widgetsSvc: Widgets, // the widgets data service\n        private router: Router, // the router to navigate to other routes\n    ) { }\n\n    // retrieve all of the widgets from the REST service when\n    // the component is loaded\n    ngOnInit() {\n        this.widgetsSvc.getAll()\n            .subscribe(widgets => this.widgets = widgets);\n    }\n\n    // navigate to the widget view component\n    viewWidget(widgetId: number) {\n        this.router.navigate(['widget', widgetId]);\n    }\n\n    // navigate to the widget edit component in update mode\n    editWidget(widgetId: number) {\n        this.router.navigate(['widget', widgetId, \"edit\"]);\n    }\n\n    // navigate to the widget edit component in insert mode\n    createWidget() {\n        this.router.navigate(['widget', \"create\"]);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./wwwrootsrc/js/app/components/widget-table/widget-table.component.ts","import { Injectable } from \"@angular/core\";\nimport { Http, Headers, RequestOptions, Response } from \"@angular/http\";\n\nimport { Observable } from \"rxjs\";\n\nimport { Widget } from \"../models/widget\";\n\n// moved the widgets http code to a service so it can be utilized throughout\n// the Angular 2 application\n\n@Injectable()\nexport class Widgets {\n\n    // set headers for requests which include a body\n\tprivate readonly headers: Headers = new Headers({\n\t\t'Content-Type': 'application/json'\n\t});\n\t\n    // populate request options with the headers\n\tprivate readonly requestOptions: RequestOptions = new RequestOptions({\n\t\theaders: this.headers\n\t});    \n\n    // inject the Http service, and make it a private field\n    // on the service\n    constructor(private http: Http) { }\n\n    // return all of the widgets\n    getAll(): Observable<Widget[]> {\n        return this.http.get('/widgets')\n            .map(res => res.json());\n    }\n\n    // return a widget by id\n    get(widgetId: number): Observable<Widget> {\n        return this.http.get('/widgets/' + encodeURIComponent(widgetId.toString()))\n            .map(res => res.json());\n    }\n\n    // insert a new widget, and return the widget which will contain its id\n\tinsert(widget: Widget): Observable<Widget> {\n\t\treturn this.http.post(`/widgets`, JSON.stringify(widget),\n\t\t\tthis.requestOptions).map(res => res.json());\n\t}\n\n\t// only return Observable<Response> when using 204 NoContent for REST service responses\n\tupdate(widget: Widget): Observable<Response> {\n\t\treturn this.http.put(`/widgets/${encodeURIComponent(widget.id.toString())}`,\n\t\t\tJSON.stringify(widget), this.requestOptions);\n\t}\n\n    // delete a widget by id\n\tdelete(widgetId: number): Observable<Response> {\n\t\treturn this.http.delete(`/widgets/${encodeURIComponent(widgetId.toString())}`);\n\t}    \n}\n\n\n// WEBPACK FOOTER //\n// ./wwwrootsrc/js/app/services/widgets.ts","module.exports = \"<table class=\\\"table table-striped\\\">\\n  <thead>\\n    <tr>\\n      <th>Name</th>\\n      <th>Color</th>\\n      <th>Size</th>\\n      <th>Quantity</th>\\n      <th>Price</th>\\n      <th>Action</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n   <tr *ngFor=\\\"let widget of widgets\\\">\\n     <td>{{widget.name}}</td>\\n     <td class=\\\"text-center\\\">{{widget.color | capitalize}}</td>\\n     <td class=\\\"text-center\\\">{{widget.size | capitalize}}</td>\\n     <td class=\\\"text-right\\\">{{widget.quantity}}</td>\\n     <td class=\\\"text-right\\\">{{widget.price | currency:'USD':true:'1.2-2'}}</td>\\n     <td class=\\\"text-center\\\">\\n         <button type=\\\"button\\\" (click)=\\\"viewWidget(widget.id)\\\">View</button>\\n         <button type=\\\"button\\\" (click)=\\\"editWidget(widget.id)\\\">Edit</button>\\n     </td>\\n    </tr>\\n   </tbody>\\n</table>\\n<button type=\\\"button\\\" (click)=\\\"createWidget()\\\">Create Widget</button>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./wwwrootsrc/js/app/components/widget-table/widget-table.component.html\n// module id = 61\n// module chunks = 0","module.exports = \"th {\\n  text-align: center; }\\n\\n.text-center {\\n  text-align: center; }\\n\\n.text-right {\\n  text-align: right; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./wwwrootsrc/js/app/components/widget-table/widget-table.component.scss\n// module id = 62\n// module chunks = 0","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { Widgets } from \"../../services/widgets\";\nimport { Widget } from \"../../models/widget\";\n\n@Component({\n    template: require('./widget-view.component.html'),\n    styles: [ require('./widget-view.component.scss') ]\n})\nexport class WidgetView implements OnInit {\n\n    // private field of the widget to view\n    public widget: Widget;\n\n    constructor(\n        private widgets: Widgets, // the widgets data service\n        private route: ActivatedRoute, // the current route\n        private router: Router, // the router to navigate to other routes\n    ) { }\n\n    // load the widget with the route param once the component\n    // has been loaded\n    public ngOnInit() {\n        this.route.params.subscribe(params =>\n            this.widgets.get(params['widgetId'])\n                .subscribe(widget => this.widget = widget));\n    }\n\n    // navigate to the widget view component\n    editWidget(widgetId: number) {\n        this.router.navigate(['widget', widgetId, \"edit\"]);\n    }\n\n    // navigate to the widget table\n    public returnToList() {\n        this.router.navigateByUrl('/');\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./wwwrootsrc/js/app/components/widget-view/widget-view.component.ts","module.exports = \"<div>Name: {{widget?.name}}</div>\\n<div>Description: {{widget?.description}}</div>\\n<div>Color: {{widget?.color}}</div>\\n<div>Size: {{widget?.size}}</div>\\n<div>Quantity: {{widget?.quantity}}</div>\\n<div>Price: {{widget?.price}}</div>\\n<button type=\\\"button\\\" (click)=\\\"editWidget(widget.id)\\\">Edit Widget</button>\\n<button type=\\\"button\\\" (click)=\\\"returnToList()\\\">Return to List</button>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./wwwrootsrc/js/app/components/widget-view/widget-view.component.html\n// module id = 64\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./wwwrootsrc/js/app/components/widget-view/widget-view.component.scss\n// module id = 65\n// module chunks = 0","import { Component, OnInit } from \"@angular/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\n\nimport { Widgets } from \"../../services/widgets\";\nimport { Widget } from \"../../models/widget\";\n\ninterface SelectOption {\n    value: string,\n    label: string,\n}\n\n@Component({\n    selector: \"widget-edit\",\n    template: require(\"./widget-edit.component.html\"),\n    styles: [ require(\"./widget-edit.component.scss\") ]\n})\nexport class WidgetEdit implements OnInit {\n\n    // the widget to modify in the form\n    private widget: Widget = { color:\"\", size:\"\", quantity: 0, price: 0 } as Widget;\n\n    // options for drop downs\n    private colors: SelectOption[] = [\n        { value: \"red\", label: \"Red\" },\n        { value: \"blue\", label: \"Blue\" },\n        { value: \"green\", label: \"Green\" },\n        { value: \"yellow\", label: \"Yellow\" },\n        { value: \"orange\", label: \"Orange\" },\n        { value: \"purple\", label: \"Purple\" },\n    ];\n\n    private sizes: SelectOption[] = [\n        { value: \"tiny\", label: \"Tiny\" },\n        { value: \"small\", label: \"Small\" },\n        { value: \"medium\", label: \"Medium\" },\n        { value: \"large\", label: \"Large\" },\n        { value: \"huge\", label: \"Huge\" },\n    ];\n\n    constructor(\n        private widgets: Widgets, // the widgets data service\n        private route: ActivatedRoute, // the current route\n        private router: Router, // the router to navigate to other routes\n    ) { }\n\n    public ngOnInit() {\n\n        // if a widget id param is supplied, load the widget\n        this.route.params.subscribe(params => {\n\n            // check to see if a widget id has been specified, if it had,\n            // then load the widget\n            if (params[\"widgetId\"]) {\n                this.widgets.get(Number(params[\"widgetId\"])).subscribe(widget =>\n                    this.widget = widget);\n            }\n\n        });\n    }\n\n    public saveWidget(widget: Widget) {\n\n        // if the widget has an id, then update it; otherwise, insert it\n        // after saving, return to the widget table\n\t\tif (this.widget.id) {\n\t\t\tthis.widgets.update(this.widget).subscribe(() =>\n\t\t\t\tthis.router.navigateByUrl(\"/\"));\n\t\t} else {\n\t\t\tthis.widgets.insert(this.widget).subscribe(() =>\n\t\t\t\tthis.router.navigateByUrl(\"/\"));\n\t\t}\n\n    }\n\n    // delete the widget with the specified id, then return\n    // to the table of widgets\n    public deleteWidget(widgetId: number) {\n\t\tthis.widgets.delete(widgetId)\n\t\t\t.subscribe(() => this.router.navigateByUrl(\"/\"));\n    }\n\n    // return to the table of widgets\n    public returnToList() {\n\t\tthis.router.navigateByUrl(\"/\");\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./wwwrootsrc/js/app/components/widget-edit/widget-edit.component.ts","module.exports = \"<form novalidate>\\n\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"widget-name-input\\\">Name:</label>\\n        <input type=\\\"text\\\" id=\\\"widget-name-input\\\" required #widgetNameInput=\\\"ngModel\\\"\\n            name=\\\"widgetName\\\" [(ngModel)]=\\\"widget.name\\\">\\n        <span *ngIf=\\\"widgetNameInput.invalid\\\">Please enter a widget name.</span>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"widget-description-input\\\">Description:</label>\\n        <textarea id=\\\"widget-description-input\\\"\\n            name=\\\"widgetDescription\\\" [(ngModel)]=\\\"widget.description\\\"></textarea>         \\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"widget-color-select\\\">Color:</label>\\n        <select id=\\\"widget-color-select\\\" required #widgetColorSelect=\\\"ngModel\\\"\\n            name=\\\"widgetColor\\\" [(ngModel)]=\\\"widget.color\\\">\\n            <option value=\\\"\\\">Select One...</option>\\n            <option *ngFor=\\\"let color of colors\\\" [value]=\\\"color.value\\\">{{color.label}}</option>\\n        </select>\\n        <span *ngIf=\\\"widgetColorSelect.invalid\\\">Please select a widget color.</span>        \\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"widget-size-input\\\">Size:</label>\\n        <select id=\\\"widget-size-select\\\" required #widgetSizeSelect=\\\"ngModel\\\"\\n            name=\\\"widgetSize\\\" [(ngModel)]=\\\"widget.size\\\">\\n            <option value=\\\"\\\">Select One...</option>\\n            <option *ngFor=\\\"let size of sizes\\\" [value]=\\\"size.value\\\">{{size.label}}</option>\\n        </select>\\n        <span *ngIf=\\\"widgetSizeSelect.invalid\\\">Please select a widget size.</span>        \\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"widget-quantity-input\\\">Quantity:</label>\\n        <input type=\\\"number\\\" id=\\\"widget-quantity-input\\\" required #widgetQuantityInput=\\\"ngModel\\\"\\n            name=\\\"widgetQuantity\\\" [(ngModel)]=\\\"widget.quantity\\\">\\n        <span *ngIf=\\\"widgetQuantityInput.invalid\\\">Please enter a widget quantity.</span>        \\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"widget-price-input\\\">Price:</label>\\n        <input type=\\\"number\\\" id=\\\"widget-price-input\\\" required  #widgetPriceInput=\\\"ngModel\\\"\\n            name=\\\"widgetPrice\\\" [(ngModel)]=\\\"widget.price\\\">\\n        <span *ngIf=\\\"widgetPriceInput.invalid\\\">Please enter a price quantity.</span>        \\n    </div>\\n\\n    <button type=\\\"button\\\" (click)=\\\"saveWidget(widget)\\\">Save</button>\\n    <button type=\\\"button\\\" *ngIf=\\\"widget.id\\\" (click)=\\\"deleteWidget(widget.id)\\\">Delete</button>\\n    <button type=\\\"button\\\" (click)=\\\"returnToList()\\\">Return to List</button>\\n\\n</form>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./wwwrootsrc/js/app/components/widget-edit/widget-edit.component.html\n// module id = 67\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./wwwrootsrc/js/app/components/widget-edit/widget-edit.component.scss\n// module id = 68\n// module chunks = 0","// imports the Component decorator from the core\n// Angular 2 module\nimport { Component, OnInit } from '@angular/core';\n\n// import the widget interface for defining widget models\nimport { Widget } from './models/widget';\n\n// import the Widgets service for getting widgets from the\n// REST service\nimport { Widgets } from './services/widgets';\n\n// The Component Decorator configures this class\n// to serve as a component in the Angular 2 application\n@Component({\n    // Used to identify the element the component will be applied to in\n    // the DOM structure of the web page\n    selector: 'main',\n    // Loads the component's specific styles\n    styles: [require('./app.component.scss')],\n    // Loads the component's template\n    template: require('./app.component.html'),\n})\nexport class AppComponent implements OnInit {\n \n    // array of widgets to display in the table\n    private widgets: Widget[] = null;\n\n    // use the current year for the copyright year\n    private copyright: string = `Copyright ${(new Date()).getFullYear()} Widget Application`;\n\n    // inject the http service into the component\n    // marked as private so http will be available\n    // as private field on the component instance\n    constructor(private widgetsSvc: Widgets) { }\n\n    // runs when the component is instantiated\n    ngOnInit() {\n\n        // retrieve the widgets from the REST services\n        this.widgetsSvc.getAll()\n            .subscribe(widgets => {\n                this.widgets = widgets;\n            });\n    }    \n}\n\n\n// WEBPACK FOOTER //\n// ./wwwrootsrc/js/app/app.component.ts","module.exports = \"h1 {\\n  color: blue; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./wwwrootsrc/js/app/app.component.scss\n// module id = 70\n// module chunks = 0","module.exports = \"<header>\\n    <h1>Widget Application</h1>\\n</header>\\n<div>\\n    <router-outlet></router-outlet>\\n</div>\\n<footer>\\n    <small>{{copyright}}</small>\\n</footer>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./wwwrootsrc/js/app/app.component.html\n// module id = 71\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./styles.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./styles.scss\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./styles.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./wwwrootsrc/css/styles.scss\n// module id = 72\n// module chunks = 0","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"body {\\n  margin: 10px; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/sass-loader!./wwwrootsrc/css/styles.scss\n// module id = 73\n// module chunks = 0","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({ name: 'capitalize'})\nexport class CapitalizePipe implements PipeTransform {\n\n    public transform(value: string) {\n        return value.charAt(0).toUpperCase() + value.slice(1);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./wwwrootsrc/js/app/pipes/capitalize.pipe.ts"],"sourceRoot":""}